!----- GPL ---------------------------------------------------------------------
!                                                                               
!  Copyright (C)  Stichting Deltares, 2011-2022.                                
!                                                                               
!  This program is free software: you can redistribute it and/or modify         
!  it under the terms of the GNU General Public License as published by         
!  the Free Software Foundation version 3.                                      
!                                                                               
!  This program is distributed in the hope that it will be useful,              
!  but WITHOUT ANY WARRANTY; without even the implied warranty of               
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                
!  GNU General Public License for more details.                                 
!                                                                               
!  You should have received a copy of the GNU General Public License            
!  along with this program.  If not, see <http://www.gnu.org/licenses/>.        
!                                                                               
!  contact: delft3d.support@deltares.nl                                         
!  Stichting Deltares                                                           
!  P.O. Box 177                                                                 
!  2600 MH Delft, The Netherlands                                               
!                                                                               
!  All indications and logos of, and references to, "Delft3D" and "Deltares"    
!  are registered trademarks of Stichting Deltares, and remain the property of  
!  Stichting Deltares. All rights reserved.                                     
!                                                                               
!-------------------------------------------------------------------------------
!  $Id: bedformpar.igs 140618 2022-01-12 13:12:04Z klapwijk $
!  $HeadURL: https://svn.oss.deltares.nl/repos/delft3d/branches/releases/140712/src/engines_gpl/flow2d3d/packages/data/include/bedformpar.igs $$
!-------------------------------------------------------------------------------
type gd_bedformpar
!

    character(256)                   :: flbdfh                 !File specifying Bedform-height
    character(256)                   :: flnmD50                !File specifying 50-percentile of sediment diameters
    character(256)                   :: flnmD90                !File specifying 90-percentile of sediment diameters
    
    logical                          :: lfbedfrm               !Logical flag for bedform computation
    logical                          :: lfbedfrmout            !Logical flag for bedform output
    logical                          :: lfbedfrmrou            !Logical flag for bedform roughness computation
    logical                          :: lfbedfrmCFL            !Logical flag for CFL-violation check
    logical                          :: lfbedfrmADV            !Logical flag for ADVection
    logical                          :: lfbdfmor               !Logical flag for morphological time scale
    logical                          :: spatial_bedform        !sediment diameters are spatial varying (even if no sediment simulated)

    integer                          :: bedformheighttype      !Type number of duneheight predictor 
    integer                          :: bedformlengthtype      !Type number of duneheight predictor 
    integer                          :: bdfrpt                 !Type number of rksd (duinruwheidshoogte) predictor 
    integer                          :: bdfrlxtype             !Type number of length scale bedformL_H
    
    real(fp)                         :: bdfC_Hn                !Bedform migration non-linearity parameter
    real(fp)                         :: bdfC_Hp                !Bedform migration speed gamma power
    real(fp)                         :: bdfGmin                !Minimum value of gamma
    real(fp)                         :: bdfHmax                !Maximum water level
    real(fp)                         :: bdfL_Hc                !Multiplication factor
    real(fp)                         :: bdfL_Hp                !Length scale phi power
    real(fp)                         :: bdfPmax                !Maximum value of phi
    real(fp)                         :: bedformL_H             !Lengthscale associated with the time depedendant adjustment of dunes 
    real(fp)                         :: bedformT_H             !Timescale associated with the time depedendant adjustment of dunes 
    real(fp)                         :: bdfuni                 !uniform height for bedform
    real(fp)                         :: thetacdune             !critical shear stress for dunes

    real(fp)      , dimension(:)    , pointer :: bedformD50    !50-percentile of sediment diameters (if no sediment simulated)
    real(fp)      , dimension(:)    , pointer :: bedformD90    !90-percentile of sediment diameters (if no sediment simulated)
    real(fp)      , dimension(:)    , pointer :: hdpar         !Coefficients for duneheight (/a, b, c/) on basis of power relation a*(h**b) of (epsilon, 0) in Sieben04MPM
    real(fp)      , dimension(:)    , pointer :: ldpar         !Coefficients for dunelength on basis of power relation 
    real(fp)      , dimension(:)    , pointer :: cdpar         !Coefficients to calculate the bedform celerity (a * u ** b)
    real(fp)      , dimension(:)    , pointer :: kdpar         !Coefficients for rksd on basis of power relation 
    real(fp)      , dimension(:)    , pointer :: duneheight    !Dune heights
    real(fp)      , dimension(:)    , pointer :: duneheightequi !Equilibrium dune heights
    real(fp)      , dimension(:)    , pointer :: dunelength    !Dune lengths
    real(fp)      , dimension(:)    , pointer :: qbedformx     !Bedform celerity M direction
    real(fp)      , dimension(:)    , pointer :: qbedformy     !Bedform celerity N direction
    real(fp)      , dimension(:)    , pointer :: ubedform      !Bedform celerity magnitude

    real(fp)      , dimension(:)    , pointer :: rksr          !Ripple roughness height in zeta point
    real(fp)      , dimension(:)    , pointer :: rksmr         !Mega-ripple roughness height in zeta point
    real(fp)      , dimension(:)    , pointer :: rksd          !Dune roughness height in zeta point

!
end type gd_bedformpar
