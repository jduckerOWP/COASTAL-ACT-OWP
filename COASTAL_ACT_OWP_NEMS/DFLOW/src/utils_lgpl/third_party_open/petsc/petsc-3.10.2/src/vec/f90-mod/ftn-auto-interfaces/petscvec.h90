      subroutine VecCreate(a,b,z)
      use petscvecdef
       integer a ! MPI_Comm
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecStashGetInfo(a,b,c,d,e,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine VecSetLocalToGlobalMapping(a,b,z)
      use petscvecdef
       Vec a ! Vec
       ISLocalToGlobalMapping b ! ISLocalToGlobalMapping
       integer z
       end subroutine
      subroutine VecGetLocalToGlobalMapping(a,b,z)
      use petscvecdef
       Vec a ! Vec
       ISLocalToGlobalMapping b ! ISLocalToGlobalMapping
       integer z
       end subroutine
      subroutine VecAssemblyBegin(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecAssemblyEnd(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecPointwiseMax(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecPointwiseMin(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecPointwiseMaxAbs(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecPointwiseDivide(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecDuplicate(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecDestroy(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecGetSize(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine VecGetLocalSize(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine VecSetOption(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       VecOption b ! VecOption
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine VecResetArray(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecReciprocal(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecStashSetInitialSize(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine VecConjugate(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecPointwiseMult(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecSetRandom(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscRandom b ! PetscRandom
       integer z
       end subroutine
      subroutine VecZeroEntries(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecSetFromOptions(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecSetSizes(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine VecSetBlockSize(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine VecGetBlockSize(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine VecSetUp(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecCopy(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecSwap(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecStashView(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine VecGetLayout(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscLayout b ! PetscLayout
       integer z
       end subroutine
      subroutine VecSetLayout(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscLayout b ! PetscLayout
       integer z
       end subroutine
      subroutine VecMaxPointwiseDivide(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine VecDot(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecDotRealPart(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine VecNorm(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       NormType b ! NormType
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine VecNormAvailable(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       NormType b ! NormType
       PetscBool c ! PetscBool
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine VecNormalize(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine VecTDot(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecScale(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine VecSet(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine VecAXPY(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecAXPBY(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       PetscScalar c ! PetscScalar
       Vec d ! Vec
       integer z
       end subroutine
      subroutine VecAXPBYPCZ(a,b,c,d,e,f,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       PetscScalar c ! PetscScalar
       PetscScalar d ! PetscScalar
       Vec e ! Vec
       Vec f ! Vec
       integer z
       end subroutine
      subroutine VecAYPX(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecWAXPY(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine VecGetValues(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecSetValuesBlockedLocal(a,b,c,d,e,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscScalar d (*) ! PetscScalar
       InsertMode e ! InsertMode
       integer z
       end subroutine
      subroutine VecMTDot(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c (*) ! Vec
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecMDot(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c (*) ! Vec
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecMAXPY(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscScalar c (*) ! PetscScalar
       Vec d (*) ! Vec
       integer z
       end subroutine
      subroutine VecGetSubVector(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecRestoreSubVector(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecGetLocalVectorRead(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecRestoreLocalVectorRead(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecGetLocalVector(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecRestoreLocalVector(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecPlaceArray(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecLockGet(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine VecLockPush(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecLockPop(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecCreateSeqViennaCL(a,b,c,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecCreateMPI(a,b,c,d,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       Vec d ! Vec
       integer z
       end subroutine
      subroutine VecGhostGetLocalForm(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecGhostIsLocalForm(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine VecGhostRestoreLocalForm(a,b,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       integer z
       end subroutine
      subroutine VecGhostUpdateBegin(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       InsertMode b ! InsertMode
       ScatterMode c ! ScatterMode
       integer z
       end subroutine
      subroutine VecGhostUpdateEnd(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       InsertMode b ! InsertMode
       ScatterMode c ! ScatterMode
       integer z
       end subroutine
      subroutine VecCreateGhost(a,b,c,d,e,f,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       Vec f ! Vec
       integer z
       end subroutine
      subroutine VecMPISetGhost(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine VecCreateGhostBlock(a,b,c,d,e,f,g,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f (*) ! PetscInt
       Vec g ! Vec
       integer z
       end subroutine
      subroutine VecCreateSeq(a,b,c,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecScatterSetFromOptions(a,z)
      use petscvecdef
       VecScatter a ! VecScatter
       integer z
       end subroutine
      subroutine VecScatterCreate(a,b,c,d,e,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       Vec c ! Vec
       IS d ! IS
       VecScatter e ! VecScatter
       integer z
       end subroutine
      subroutine VecScatterGetMerged(a,b,z)
      use petscvecdef
       VecScatter a ! VecScatter
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine VecScatterBegin(a,b,c,d,e,z)
      use petscvecdef
       VecScatter a ! VecScatter
       Vec b ! Vec
       Vec c ! Vec
       InsertMode d ! InsertMode
       ScatterMode e ! ScatterMode
       integer z
       end subroutine
      subroutine VecScatterEnd(a,b,c,d,e,z)
      use petscvecdef
       VecScatter a ! VecScatter
       Vec b ! Vec
       Vec c ! Vec
       InsertMode d ! InsertMode
       ScatterMode e ! ScatterMode
       integer z
       end subroutine
      subroutine VecScatterDestroy(a,z)
      use petscvecdef
       VecScatter a ! VecScatter
       integer z
       end subroutine
      subroutine VecScatterCopy(a,b,z)
      use petscvecdef
       VecScatter a ! VecScatter
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine VecCreateShared(a,b,c,d,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       Vec d ! Vec
       integer z
       end subroutine
      subroutine VecNestGetSubVec(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecNestSetSubVec(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine VecNestGetSize(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine VecWhichEqual(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       IS c ! IS
       integer z
       end subroutine
      subroutine VecWhichLessThan(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       IS c ! IS
       integer z
       end subroutine
      subroutine VecWhichGreaterThan(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       IS c ! IS
       integer z
       end subroutine
      subroutine VecWhichBetween(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       IS d ! IS
       integer z
       end subroutine
      subroutine VecWhichBetweenOrEqual(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       IS d ! IS
       integer z
       end subroutine
      subroutine VecWhichInactive(a,b,c,d,e,f,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       PetscBool e ! PetscBool
       IS f ! IS
       integer z
       end subroutine
      subroutine VecISAXPY(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       PetscScalar c ! PetscScalar
       Vec d ! Vec
       integer z
       end subroutine
      subroutine VecISCopy(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       ScatterMode c ! ScatterMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine ISComplementVec(a,b,c,z)
      use petscvecdef
       IS a ! IS
       Vec b ! Vec
       IS c ! IS
       integer z
       end subroutine
      subroutine VecISSet(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecStepMaxBounded(a,b,c,d,e,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       PetscReal e ! PetscReal
       integer z
       end subroutine
      subroutine VecStepBoundInfo(a,b,c,d,e,f,g,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       integer z
       end subroutine
      subroutine VecStepMax(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine VecPow(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine VecMedian(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine PetscSFCreateFromZero(a,b,c,z)
      use petscvecdef
       integer a ! MPI_Comm
       Vec b ! Vec
       PetscSF c ! PetscSF
       integer z
       end subroutine
      subroutine VecStrideSet(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecStrideScale(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecStrideNorm(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       NormType c ! NormType
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine VecStrideMax(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine VecStrideMin(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine VecStrideScaleAll(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine VecStrideNormAll(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       NormType b ! NormType
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine VecStrideMaxAll(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b (*) ! PetscInt
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine VecStrideMinAll(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b (*) ! PetscInt
       PetscReal c (*) ! PetscReal
       integer z
       end subroutine
      subroutine VecStrideGatherAll(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b (*) ! Vec
       InsertMode c ! InsertMode
       integer z
       end subroutine
      subroutine VecStrideScatterAll(a,b,c,z)
      use petscvecdef
       Vec a (*) ! Vec
       Vec b ! Vec
       InsertMode c ! InsertMode
       integer z
       end subroutine
      subroutine VecStrideGather(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c ! Vec
       InsertMode d ! InsertMode
       integer z
       end subroutine
      subroutine VecStrideScatter(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c ! Vec
       InsertMode d ! InsertMode
       integer z
       end subroutine
      subroutine VecStrideSubSetGather(a,b,c,d,e,f,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       Vec e ! Vec
       InsertMode f ! InsertMode
       integer z
       end subroutine
      subroutine VecStrideSubSetScatter(a,b,c,d,e,f,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       Vec e ! Vec
       InsertMode f ! InsertMode
       integer z
       end subroutine
      subroutine VecExp(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecLog(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecSqrtAbs(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecDotNorm2(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine VecSum(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine VecShift(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine VecAbs(a,z)
      use petscvecdef
       Vec a ! Vec
       integer z
       end subroutine
      subroutine VecPermute(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       IS b ! IS
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine VecEqual(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine VecUniqueEntries(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecChop(a,b,z)
      use petscvecdef
       Vec a ! Vec
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine PetscCommSplitReductionBegin(a,z)
      use petscvecdef
       integer a ! MPI_Comm
       integer z
       end subroutine
      subroutine VecDotBegin(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecDotEnd(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecTDotBegin(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecTDotEnd(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       Vec b ! Vec
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine VecNormBegin(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       NormType b ! NormType
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine VecNormEnd(a,b,c,z)
      use petscvecdef
       Vec a ! Vec
       NormType b ! NormType
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine VecMDotBegin(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c (*) ! Vec
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecMDotEnd(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c (*) ! Vec
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecMTDotBegin(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c (*) ! Vec
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecMTDotEnd(a,b,c,d,z)
      use petscvecdef
       Vec a ! Vec
       PetscInt b ! PetscInt
       Vec c (*) ! Vec
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine VecTaggerDestroy(a,z)
      use petscvecdef
       VecTagger a ! VecTagger
       integer z
       end subroutine
      subroutine VecTaggerSetUp(a,z)
      use petscvecdef
       VecTagger a ! VecTagger
       integer z
       end subroutine
      subroutine VecCreateSeqCUDA(a,b,c,z)
      use petscvecdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
