      subroutine MatColoringCreate(a,b,z)
      use petscmatdef
       Mat a ! Mat
       MatColoring b ! MatColoring
       integer z
       end subroutine
      subroutine MatColoringDestroy(a,z)
      use petscmatdef
       MatColoring a ! MatColoring
       integer z
       end subroutine
      subroutine MatColoringSetFromOptions(a,z)
      use petscmatdef
       MatColoring a ! MatColoring
       integer z
       end subroutine
      subroutine MatColoringSetDistance(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatColoringGetDistance(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatColoringSetMaxColors(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatColoringGetMaxColors(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatColoringApply(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       ISColoring b ! ISColoring
       integer z
       end subroutine
      subroutine MatColoringView(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine MatColoringSetWeightType(a,b,z)
      use petscmatdef
       MatColoring a ! MatColoring
       MatColoringWeightType b ! MatColoringWeightType
       integer z
       end subroutine
      subroutine MatCreateLaplacian(a,b,c,d,z)
      use petscmatdef
       Mat a ! Mat
       PetscReal b ! PetscReal
       PetscBool c ! PetscBool
       Mat d ! Mat
       integer z
       end subroutine
      subroutine MatCoarsenApply(a,z)
      use petscmatdef
       MatCoarsen a ! MatCoarsen
       integer z
       end subroutine
      subroutine MatCoarsenSetAdjacency(a,b,z)
      use petscmatdef
       MatCoarsen a ! MatCoarsen
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatCoarsenSetStrictAggs(a,b,z)
      use petscmatdef
       MatCoarsen a ! MatCoarsen
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatCoarsenDestroy(a,z)
      use petscmatdef
       MatCoarsen a ! MatCoarsen
       integer z
       end subroutine
      subroutine MatCoarsenCreate(a,b,z)
      use petscmatdef
       integer a ! MPI_Comm
       MatCoarsen b ! MatCoarsen
       integer z
       end subroutine
      subroutine MatCoarsenSetFromOptions(a,z)
      use petscmatdef
       MatCoarsen a ! MatCoarsen
       integer z
       end subroutine
      subroutine MatPartitioningApplyND(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       IS b ! IS
       integer z
       end subroutine
      subroutine MatPartitioningApply(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       IS b ! IS
       integer z
       end subroutine
      subroutine MatPartitioningSetAdjacency(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       Mat b ! Mat
       integer z
       end subroutine
      subroutine MatPartitioningDestroy(a,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       integer z
       end subroutine
      subroutine MatPartitioningCreate(a,b,z)
      use petscmatdef
       integer a ! MPI_Comm
       MatPartitioning b ! MatPartitioning
       integer z
       end subroutine
      subroutine MatPartitioningSetFromOptions(a,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       integer z
       end subroutine
      subroutine MatPartitioningPTScotchSetImbalance(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatPartitioningPTScotchGetImbalance(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatPartitioningPTScotchSetStrategy(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPPTScotchStrategyType b ! MPPTScotchStrategyType
       integer z
       end subroutine
      subroutine MatPartitioningPTScotchGetStrategy(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPPTScotchStrategyType b ! MPPTScotchStrategyType
       integer z
       end subroutine
      subroutine MatPartitioningParmetisSetCoarseSequential(a,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       integer z
       end subroutine
      subroutine MatPartitioningParmetisSetRepartition(a,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       integer z
       end subroutine
      subroutine MatPartitioningParmetisGetEdgeCut(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatMeshToVertexGraph(a,b,c,z)
      use petscmatdef
       Mat a ! Mat
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatMeshToCellGraph(a,b,c,z)
      use petscmatdef
       Mat a ! Mat
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine MatPartitioningPartySetCoarseLevel(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatPartitioningPartySetMatchOptimization(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatPartitioningPartySetBipart(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatPartitioningChacoSetGlobal(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPChacoGlobalType b ! MPChacoGlobalType
       integer z
       end subroutine
      subroutine MatPartitioningChacoGetGlobal(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPChacoGlobalType b ! MPChacoGlobalType
       integer z
       end subroutine
      subroutine MatPartitioningChacoSetLocal(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPChacoLocalType b ! MPChacoLocalType
       integer z
       end subroutine
      subroutine MatPartitioningChacoGetLocal(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPChacoLocalType b ! MPChacoLocalType
       integer z
       end subroutine
      subroutine MatPartitioningChacoSetCoarseLevel(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatPartitioningChacoSetEigenSolver(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPChacoEigenType b ! MPChacoEigenType
       integer z
       end subroutine
      subroutine MatPartitioningChacoGetEigenSolver(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       MPChacoEigenType b ! MPChacoEigenType
       integer z
       end subroutine
      subroutine MatPartitioningChacoSetEigenTol(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatPartitioningChacoGetEigenTol(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine MatPartitioningChacoSetEigenNumber(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatPartitioningChacoGetEigenNumber(a,b,z)
      use petscmatdef
       MatPartitioning a ! MatPartitioning
       PetscInt b ! PetscInt
       integer z
       end subroutine
