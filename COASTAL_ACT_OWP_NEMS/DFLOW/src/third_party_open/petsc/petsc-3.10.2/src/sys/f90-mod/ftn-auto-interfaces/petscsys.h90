      subroutine PetscMatlabEngineDestroy(a,z)
      use petscsysdef
       PetscMatlabEngine a ! PetscMatlabEngine
       integer z
       end subroutine
      subroutine PetscMatlabEnginePut(a,b,z)
      use petscsysdef
       PetscMatlabEngine a ! PetscMatlabEngine
       PetscObject b ! PetscObject
       integer z
       end subroutine
      subroutine PetscMatlabEngineGet(a,b,z)
      use petscsysdef
       PetscMatlabEngine a ! PetscMatlabEngine
       PetscObject b ! PetscObject
       integer z
       end subroutine
      subroutine PetscRandomGetValue(a,b,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine PetscRandomGetValueReal(a,b,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine PetscRandomGetInterval(a,b,c,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       PetscScalar b ! PetscScalar
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine PetscRandomSetInterval(a,b,c,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       PetscScalar b ! PetscScalar
       PetscScalar c ! PetscScalar
       integer z
       end subroutine
      subroutine PetscRandomDestroy(a,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       integer z
       end subroutine
      subroutine PetscRandomSetFromOptions(a,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       integer z
       end subroutine
      subroutine PetscRandomCreate(a,b,z)
      use petscsysdef
       integer a ! MPI_Comm
       PetscRandom b ! PetscRandom
       integer z
       end subroutine
      subroutine PetscRandomSeed(a,z)
      use petscsysdef
       PetscRandom a ! PetscRandom
       integer z
       end subroutine
      subroutine PetscFunctionListDestroy(a,z)
      use petscsysdef
       PetscFunctionList a ! PetscFunctionList
       integer z
       end subroutine
      subroutine PetscFunctionListView(a,b,z)
      use petscsysdef
       PetscFunctionList a ! PetscFunctionList
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine PetscFunctionListDuplicate(a,b,z)
      use petscsysdef
       PetscFunctionList a ! PetscFunctionList
       PetscFunctionList b ! PetscFunctionList
       integer z
       end subroutine
      subroutine PetscBinaryClose(a,z)
      use petscsysdef
       integer a ! int
       integer z
       end subroutine
      subroutine PetscFPTrapPush(a,z)
      use petscsysdef
       PetscFPTrap a ! PetscFPTrap
       integer z
       end subroutine
      subroutine PetscFPTrapPop(z)
      use petscsysdef
       integer z
       end subroutine
      subroutine PetscSetFPTrap(a,z)
      use petscsysdef
       PetscFPTrap a ! PetscFPTrap
       integer z
       end subroutine
      subroutine PetscPopErrorHandler(z)
      use petscsysdef
       integer z
       end subroutine
      subroutine PetscPopSignalHandler(z)
      use petscsysdef
       integer z
       end subroutine
      subroutine PetscAttachDebugger(z)
      use petscsysdef
       integer z
       end subroutine
      subroutine PetscCheckPointerSetIntensity(a,z)
      use petscsysdef
       PetscInt a ! PetscInt
       integer z
       end subroutine
      subroutine PetscGetCPUTime(a,z)
      use petscsysdef
       PetscLogDouble a ! PetscLogDouble
       integer z
       end subroutine
      subroutine PetscCommBuildTwoSidedSetType(a,b,z)
      use petscsysdef
       integer a ! MPI_Comm
       PetscBuildTwoSidedType b ! PetscBuildTwoSidedType
       integer z
       end subroutine
      subroutine PetscCommBuildTwoSidedGetType(a,b,z)
      use petscsysdef
       integer a ! MPI_Comm
       PetscBuildTwoSidedType b ! PetscBuildTwoSidedType
       integer z
       end subroutine
      subroutine PetscSortIntWithPermutation(a,b,c,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortRealWithPermutation(a,b,c,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscReal b (*) ! PetscReal
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscBarrier(a,z)
      use petscsysdef
       PetscObject a ! PetscObject
       integer z
       end subroutine
      subroutine PetscSortInt(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortedRemoveDupsInt(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortRemoveDupsInt(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscFindInt(a,b,c,d,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine PetscFindMPIInt(a,b,c,d,z)
      use petscsysdef
       PetscMPIInt a ! PetscMPIInt
       PetscInt b ! PetscInt
       PetscMPIInt c (*) ! PetscMPIInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortIntWithArray(a,b,c,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortIntWithArrayPair(a,b,c,d,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortMPIInt(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscMPIInt b (*) ! PetscMPIInt
       integer z
       end subroutine
      subroutine PetscSortRemoveDupsMPIInt(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscMPIInt b (*) ! PetscMPIInt
       integer z
       end subroutine
      subroutine PetscSortMPIIntWithArray(a,b,c,z)
      use petscsysdef
       PetscMPIInt a ! PetscMPIInt
       PetscMPIInt b (*) ! PetscMPIInt
       PetscMPIInt c (*) ! PetscMPIInt
       integer z
       end subroutine
      subroutine PetscSortIntWithScalarArray(a,b,c,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine PetscMergeIntArray(a,b,c,d,e,f,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       integer z
       end subroutine
      subroutine PetscMergeIntArrayPair(a,b,c,d,e,f,g,h,i,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b (*) ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscInt f (*) ! PetscInt
       PetscInt g ! PetscInt
       PetscInt h ! PetscInt
       PetscInt i ! PetscInt
       integer z
       end subroutine
      subroutine PetscMergeMPIIntArray(a,b,c,d,e,f,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscMPIInt b (*) ! PetscMPIInt
       PetscInt c ! PetscInt
       PetscMPIInt d (*) ! PetscMPIInt
       PetscInt e ! PetscInt
       PetscMPIInt f ! PetscMPIInt
       integer z
       end subroutine
      subroutine PetscSleep(a,z)
      use petscsysdef
       PetscReal a ! PetscReal
       integer z
       end subroutine
      subroutine PetscSequentialPhaseBegin(a,b,z)
      use petscsysdef
       integer a ! MPI_Comm
       integer b ! int
       integer z
       end subroutine
      subroutine PetscSequentialPhaseEnd(a,b,z)
      use petscsysdef
       integer a ! MPI_Comm
       integer b ! int
       integer z
       end subroutine
      subroutine PetscSortReal(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscReal b (*) ! PetscReal
       integer z
       end subroutine
      subroutine PetscSortRealWithArrayInt(a,b,c,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscReal b (*) ! PetscReal
       PetscInt c (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscFindReal(a,b,c,d,e,z)
      use petscsysdef
       PetscReal a ! PetscReal
       PetscInt b ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortRemoveDupsReal(a,b,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscReal b (*) ! PetscReal
       integer z
       end subroutine
      subroutine PetscSortSplit(a,b,c,d,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscScalar c (*) ! PetscScalar
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSortSplitReal(a,b,c,d,z)
      use petscsysdef
       PetscInt a ! PetscInt
       PetscInt b ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscInt d (*) ! PetscInt
       integer z
       end subroutine
      subroutine PetscSplitOwnershipBlock(a,b,c,d,z)
      use petscsysdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine PetscSplitOwnership(a,b,c,z)
      use petscsysdef
       integer a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine PetscOptionsCreate(a,z)
      use petscsysdef
       PetscOptions a ! PetscOptions
       integer z
       end subroutine
      subroutine PetscOptionsDestroy(a,z)
      use petscsysdef
       PetscOptions a ! PetscOptions
       integer z
       end subroutine
      subroutine PetscOptionsAllUsed(a,b,z)
      use petscsysdef
       PetscOptions a ! PetscOptions
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscOptionsLeft(a,z)
      use petscsysdef
       PetscOptions a ! PetscOptions
       integer z
       end subroutine
      subroutine PetscOptionsMonitorCancel(z)
      use petscsysdef
       integer z
       end subroutine
      subroutine PetscInitialized(a,z)
      use petscsysdef
       PetscBool a ! PetscBool
       integer z
       end subroutine
      subroutine PetscFinalized(a,z)
      use petscsysdef
       PetscBool a ! PetscBool
       integer z
       end subroutine
      subroutine PetscObjectGetId(a,b,z)
      use petscsysdef
       PetscObject a ! PetscObject
       PetscObjectId b ! PetscObjectId
       integer z
       end subroutine
      subroutine PetscObjectGetClassId(a,b,z)
      use petscsysdef
       PetscObject a ! PetscObject
       PetscClassId b ! PetscClassId
       integer z
       end subroutine
      subroutine PetscObjectSetPrintedOptions(a,z)
      use petscsysdef
       PetscObject a ! PetscObject
       integer z
       end subroutine
      subroutine PetscObjectInheritPrintedOptions(a,b,z)
      use petscsysdef
       PetscObject a ! PetscObject
       PetscObject b ! PetscObject
       integer z
       end subroutine
      subroutine PetscObjectSetFromOptions(a,z)
      use petscsysdef
       PetscObject a ! PetscObject
       integer z
       end subroutine
      subroutine PetscObjectSetUp(a,z)
      use petscsysdef
       PetscObject a ! PetscObject
       integer z
       end subroutine
      subroutine PetscCommGetNewTag(a,b,z)
      use petscsysdef
       integer a ! MPI_Comm
       PetscMPIInt b ! PetscMPIInt
       integer z
       end subroutine
      subroutine PetscObjectGetTabLevel(a,b,z)
      use petscsysdef
       PetscObject a ! PetscObject
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscObjectSetTabLevel(a,b,z)
      use petscsysdef
       PetscObject a ! PetscObject
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PetscObjectIncrementTabLevel(a,b,c,z)
      use petscsysdef
       PetscObject a ! PetscObject
       PetscObject b ! PetscObject
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine PetscObjectDestroy(a,z)
      use petscsysdef
       PetscObject a ! PetscObject
       integer z
       end subroutine
      subroutine PetscBagSetFromOptions(a,z)
      use petscsysdef
       PetscBag a ! PetscBag
       integer z
       end subroutine
      subroutine PetscMallocGetCurrentUsage(a,z)
      use petscsysdef
       PetscLogDouble a ! PetscLogDouble
       integer z
       end subroutine
      subroutine PetscMallocGetMaximumUsage(a,z)
      use petscsysdef
       PetscLogDouble a ! PetscLogDouble
       integer z
       end subroutine
      subroutine PetscMallocSetDumpLog(z)
      use petscsysdef
       integer z
       end subroutine
      subroutine PetscMallocSetDumpLogThreshold(a,z)
      use petscsysdef
       PetscLogDouble a ! PetscLogDouble
       integer z
       end subroutine
      subroutine PetscMallocGetDumpLog(a,z)
      use petscsysdef
       PetscBool a ! PetscBool
       integer z
       end subroutine
      subroutine PetscMallocDebug(a,z)
      use petscsysdef
       PetscBool a ! PetscBool
       integer z
       end subroutine
      subroutine PetscMallocGetDebug(a,z)
      use petscsysdef
       PetscBool a ! PetscBool
       integer z
       end subroutine
      subroutine PetscMemoryGetCurrentUsage(a,z)
      use petscsysdef
       PetscLogDouble a ! PetscLogDouble
       integer z
       end subroutine
      subroutine PetscMemoryGetMaximumUsage(a,z)
      use petscsysdef
       PetscLogDouble a ! PetscLogDouble
       integer z
       end subroutine
      subroutine PetscMemorySetGetMaximumUsage(z)
      use petscsysdef
       integer z
       end subroutine
