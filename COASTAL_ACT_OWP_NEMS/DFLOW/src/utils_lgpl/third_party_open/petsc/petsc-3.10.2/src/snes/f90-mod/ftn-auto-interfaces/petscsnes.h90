      subroutine SNESCompositeGetSNES(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       SNES c ! SNES
       integer z
       end subroutine
      subroutine SNESCompositeGetNumber(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESCompositeSetDamping(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine SNESNASMSetType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PCASMType b ! PCASMType
       integer z
       end subroutine
      subroutine SNESNASMGetType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PCASMType b ! PCASMType
       integer z
       end subroutine
      subroutine SNESNASMSetSubdomains(a,b,c,d,e,f,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       SNES c (*) ! SNES
       VecScatter d (*) ! VecScatter
       VecScatter e (*) ! VecScatter
       VecScatter f (*) ! VecScatter
       integer z
       end subroutine
      subroutine SNESNASMGetSubdomains(a,b,c,d,e,f,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       SNES c (*) ! SNES
       VecScatter d (*) ! VecScatter
       VecScatter e (*) ! VecScatter
       VecScatter f (*) ! VecScatter
       integer z
       end subroutine
      subroutine SNESNASMGetSubdomainVecs(a,b,c,d,e,f,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Vec f ! Vec
       integer z
       end subroutine
      subroutine SNESNASMSetComputeFinalJacobian(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESNASMSetDamping(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESNASMGetDamping(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESNASMGetSNES(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       SNES c ! SNES
       integer z
       end subroutine
      subroutine SNESNASMGetNumber(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESNASMSetWeight(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       integer z
       end subroutine
      subroutine SNESQNSetRestartType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESQNRestartType b ! SNESQNRestartType
       integer z
       end subroutine
      subroutine SNESQNSetScaleType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESQNScaleType b ! SNESQNScaleType
       integer z
       end subroutine
      subroutine SNESQNSetType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESQNType b ! SNESQNType
       integer z
       end subroutine
      subroutine SNESLineSearchBTSetAlpha(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchBTGetAlpha(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchMonitorCancel(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchMonitor(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchCreate(a,b,z)
      use petscsnesdef
       integer a ! MPI_Comm
       SNESLineSearch b ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchSetUp(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchReset(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchPreCheck(a,b,c,d,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       Vec b ! Vec
       Vec c ! Vec
       PetscBool d ! PetscBool
       integer z
       end subroutine
      subroutine SNESLineSearchPostCheck(a,b,c,d,e,f,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       PetscBool e ! PetscBool
       PetscBool f ! PetscBool
       integer z
       end subroutine
      subroutine SNESLineSearchApply(a,b,c,d,e,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       Vec e ! Vec
       integer z
       end subroutine
      subroutine SNESLineSearchDestroy(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchSetDefaultMonitor(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine SNESLineSearchGetDefaultMonitor(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine SNESLineSearchSetFromOptions(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchView(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine SNESLineSearchSetSNES(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       SNES b ! SNES
       integer z
       end subroutine
      subroutine SNESLineSearchGetSNES(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       SNES b ! SNES
       integer z
       end subroutine
      subroutine SNESLineSearchGetLambda(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchSetLambda(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchGetTolerances(a,b,c,d,e,f,g,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine SNESLineSearchSetTolerances(a,b,c,d,e,f,g,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscInt g ! PetscInt
       integer z
       end subroutine
      subroutine SNESLineSearchGetDamping(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchSetDamping(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchGetOrder(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESLineSearchSetOrder(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESLineSearchGetNorms(a,b,c,d,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchSetNorms(a,b,c,d,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine SNESLineSearchComputeNorms(a,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESLineSearchSetComputeNorms(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESLineSearchGetVecs(a,b,c,d,e,f,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Vec f ! Vec
       integer z
       end subroutine
      subroutine SNESLineSearchSetVecs(a,b,c,d,e,f,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Vec f ! Vec
       integer z
       end subroutine
      subroutine SNESLineSearchGetReason(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       SNESLineSearchReason b ! SNESLineSearchReason
       integer z
       end subroutine
      subroutine SNESLineSearchSetReason(a,b,z)
      use petscsnesdef
       SNESLineSearch a ! SNESLineSearch
       SNESLineSearchReason b ! SNESLineSearchReason
       integer z
       end subroutine
      subroutine DMAdaptorCreate(a,b,z)
      use petscsnesdef
       integer a ! MPI_Comm
       DMAdaptor b ! DMAdaptor
       integer z
       end subroutine
      subroutine DMAdaptorDestroy(a,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       integer z
       end subroutine
      subroutine DMAdaptorSetFromOptions(a,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       integer z
       end subroutine
      subroutine DMAdaptorView(a,b,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine DMAdaptorGetSolver(a,b,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       SNES b ! SNES
       integer z
       end subroutine
      subroutine DMAdaptorSetSolver(a,b,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       SNES b ! SNES
       integer z
       end subroutine
      subroutine DMAdaptorGetSequenceLength(a,b,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMAdaptorSetSequenceLength(a,b,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMAdaptorSetUp(a,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       integer z
       end subroutine
      subroutine DMAdaptorAdapt(a,b,c,d,e,z)
      use petscsnesdef
       DMAdaptor a ! DMAdaptor
       Vec b ! Vec
       DMAdaptationStrategy c ! DMAdaptationStrategy
       DM d ! DM
       Vec e ! Vec
       integer z
       end subroutine
      subroutine DMPlexSNESGetGeometryFVM(a,b,c,d,z)
      use petscsnesdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine DMPlexSNESGetGradientDM(a,b,c,z)
      use petscsnesdef
       DM a ! DM
       PetscFV b ! PetscFV
       DM c ! DM
       integer z
       end subroutine
      subroutine PetscConvEstCreate(a,b,z)
      use petscsnesdef
       integer a ! MPI_Comm
       PetscConvEst b ! PetscConvEst
       integer z
       end subroutine
      subroutine PetscConvEstDestroy(a,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       integer z
       end subroutine
      subroutine PetscConvEstSetFromOptions(a,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       integer z
       end subroutine
      subroutine PetscConvEstView(a,b,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine PetscConvEstGetSolver(a,b,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       SNES b ! SNES
       integer z
       end subroutine
      subroutine PetscConvEstSetSolver(a,b,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       SNES b ! SNES
       integer z
       end subroutine
      subroutine PetscConvEstSetUp(a,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       integer z
       end subroutine
      subroutine PetscConvEstGetConvRate(a,b,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       PetscReal b (*) ! PetscReal
       integer z
       end subroutine
      subroutine PetscConvEstRateView(a,b,c,z)
      use petscsnesdef
       PetscConvEst a ! PetscConvEst
       PetscReal b (*) ! PetscReal
       PetscViewer c ! PetscViewer
       integer z
       end subroutine
      subroutine SNESNCGSetType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESNCGType b ! SNESNCGType
       integer z
       end subroutine
      subroutine SNESApplyNPC(a,b,c,d,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine SNESGetNPCFunction(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine KSPMonitorSNESLGResidualNormDestroy(a,z)
      use petscsnesdef
       PetscObject a ! PetscObject
       integer z
       end subroutine
      subroutine SNESSetErrorIfNotConverged(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESGetErrorIfNotConverged(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetAlwaysComputesFinalResidual(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESGetAlwaysComputesFinalResidual(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetFunctionDomainError(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESGetFunctionDomainError(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetUpMatrices(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESSetFromOptions(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESResetFromOptions(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESSetUseMatrixFree(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine SNESGetUseMatrixFree(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine SNESGetIterationNumber(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetIterationNumber(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetNonlinearStepFailures(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetMaxNonlinearStepFailures(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetMaxNonlinearStepFailures(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetNumberFunctionEvals(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetLinearSolveFailures(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetMaxLinearSolveFailures(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetMaxLinearSolveFailures(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetLinearSolveIterations(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetCountersReset(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetKSP(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       KSP b ! KSP
       integer z
       end subroutine
      subroutine SNESCreate(a,b,z)
      use petscsnesdef
       integer a ! MPI_Comm
       SNES b ! SNES
       integer z
       end subroutine
      subroutine SNESSetNormSchedule(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESNormSchedule b ! SNESNormSchedule
       integer z
       end subroutine
      subroutine SNESGetNormSchedule(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESNormSchedule b ! SNESNormSchedule
       integer z
       end subroutine
      subroutine SNESSetFunctionNorm(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESGetFunctionNorm(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESComputeFunction(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine SNESComputeNGS(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine SNESComputeJacobian(a,b,c,d,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       Mat c ! Mat
       Mat d ! Mat
       integer z
       end subroutine
      subroutine SNESSetUp(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESReset(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESDestroy(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESSetLagPreconditioner(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetGridSequence(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetGridSequence(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetLagPreconditioner(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetLagJacobian(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetLagJacobian(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetLagJacobianPersists(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetLagPreconditionerPersists(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetForceIteration(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESGetForceIteration(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetTolerances(a,b,c,d,e,f,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       integer z
       end subroutine
      subroutine SNESSetDivergenceTolerance(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESGetTolerances(a,b,c,d,e,f,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       integer z
       end subroutine
      subroutine SNESGetDivergenceTolerance(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESSetTrustRegionTolerance(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine SNESMonitor(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine SNESMonitorCancel(a,z)
      use petscsnesdef
       SNES a ! SNES
       integer z
       end subroutine
      subroutine SNESGetConvergedReason(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESConvergedReason b ! SNESConvergedReason
       integer z
       end subroutine
      subroutine SNESSetConvergedReason(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESConvergedReason b ! SNESConvergedReason
       integer z
       end subroutine
      subroutine SNESSetConvergenceHistory(a,b,c,d,e,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b (*) ! PetscReal
       PetscInt c (*) ! PetscInt
       PetscInt d ! PetscInt
       PetscBool e ! PetscBool
       integer z
       end subroutine
      subroutine SNESReasonView(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscViewer b ! PetscViewer
       integer z
       end subroutine
      subroutine SNESSolve(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine SNESSetSolution(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       integer z
       end subroutine
      subroutine SNESGetSolution(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       integer z
       end subroutine
      subroutine SNESGetSolutionUpdate(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       integer z
       end subroutine
      subroutine SNESKSPSetUseEW(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESKSPGetUseEW(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESKSPSetParametersEW(a,b,c,d,e,f,g,h,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       PetscReal h ! PetscReal
       integer z
       end subroutine
      subroutine SNESKSPGetParametersEW(a,b,c,d,e,f,g,h,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       PetscReal h ! PetscReal
       integer z
       end subroutine
      subroutine SNESGetKSP(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       KSP b ! KSP
       integer z
       end subroutine
      subroutine SNESSetDM(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       DM b ! DM
       integer z
       end subroutine
      subroutine SNESGetDM(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       DM b ! DM
       integer z
       end subroutine
      subroutine SNESSetNPC(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNES b ! SNES
       integer z
       end subroutine
      subroutine SNESGetNPC(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNES b ! SNES
       integer z
       end subroutine
      subroutine SNESHasNPC(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESSetNPCSide(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PCSide b ! PCSide
       integer z
       end subroutine
      subroutine SNESGetNPCSide(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PCSide b ! PCSide
       integer z
       end subroutine
      subroutine SNESSetLineSearch(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESLineSearch b ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESGetLineSearch(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESLineSearch b ! SNESLineSearch
       integer z
       end subroutine
      subroutine SNESNGMRESSetRestartFmRise(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine SNESNGMRESSetRestartType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESNGMRESRestartType b ! SNESNGMRESRestartType
       integer z
       end subroutine
      subroutine SNESNGMRESSetSelectType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       SNESNGMRESSelectType b ! SNESNGMRESSelectType
       integer z
       end subroutine
      subroutine SNESNGSSetTolerances(a,b,c,d,e,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine SNESNGSGetTolerances(a,b,c,d,e,z)
      use petscsnesdef
       SNES a ! SNES
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine SNESNGSSetSweeps(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESNGSGetSweeps(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine SNESMultiblockSetFields(a,b,c,d,z)
      use petscsnesdef
       SNES a ! SNES
       character b (*) ! char
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine SNESMultiblockSetIS(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       character b (*) ! char
       IS c ! IS
       integer z
       end subroutine
      subroutine SNESMultiblockSetType(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PCCompositeType b ! PCCompositeType
       integer z
       end subroutine
      subroutine SNESMultiblockSetBlockSize(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatSNESMFGetSNES(a,b,z)
      use petscsnesdef
       Mat a ! Mat
       SNES b ! SNES
       integer z
       end subroutine
      subroutine MatSNESMFSetReuseBase(a,b,z)
      use petscsnesdef
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatSNESMFGetReuseBase(a,b,z)
      use petscsnesdef
       Mat a ! Mat
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine MatCreateSNESMF(a,b,z)
      use petscsnesdef
       SNES a ! SNES
       Mat b ! Mat
       integer z
       end subroutine
      subroutine SNESVISetVariableBounds(a,b,c,z)
      use petscsnesdef
       SNES a ! SNES
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
