      subroutine PCMGGetLevels(a,b,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PCMGSetType(a,b,z)
      use petsckspdef
       PC a ! PC
       PCMGType b ! PCMGType
       integer z
       end subroutine
      subroutine PCMGGetType(a,b,z)
      use petsckspdef
       PC a ! PC
       PCMGType b ! PCMGType
       integer z
       end subroutine
      subroutine PCMGSetCycleType(a,b,z)
      use petsckspdef
       PC a ! PC
       PCMGCycleType b ! PCMGCycleType
       integer z
       end subroutine
      subroutine PCMGMultiplicativeSetCycles(a,b,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PCMGSetGalerkin(a,b,z)
      use petsckspdef
       PC a ! PC
       PCMGGalerkinType b ! PCMGGalerkinType
       integer z
       end subroutine
      subroutine PCMGGetGalerkin(a,b,z)
      use petsckspdef
       PC a ! PC
       PCMGGalerkinType b ! PCMGGalerkinType
       integer z
       end subroutine
      subroutine PCMGSetNumberSmooth(a,b,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine PCMGSetDistinctSmoothUp(a,z)
      use petsckspdef
       PC a ! PC
       integer z
       end subroutine
      subroutine PCMGGetCoarseSolve(a,b,z)
      use petsckspdef
       PC a ! PC
       KSP b ! KSP
       integer z
       end subroutine
      subroutine PCMGSetInterpolation(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine PCMGGetInterpolation(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine PCMGSetRestriction(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine PCMGGetRestriction(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine PCMGSetRScale(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine PCMGGetRScale(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine PCMGSetInjection(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine PCMGGetInjection(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Mat c ! Mat
       integer z
       end subroutine
      subroutine PCMGGetSmoother(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       KSP c ! KSP
       integer z
       end subroutine
      subroutine PCMGGetSmootherUp(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       KSP c ! KSP
       integer z
       end subroutine
      subroutine PCMGGetSmootherDown(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       KSP c ! KSP
       integer z
       end subroutine
      subroutine PCMGSetCycleTypeOnLevel(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       PCMGCycleType c ! PCMGCycleType
       integer z
       end subroutine
      subroutine PCMGSetRhs(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine PCMGSetX(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
      subroutine PCMGSetR(a,b,c,z)
      use petsckspdef
       PC a ! PC
       PetscInt b ! PetscInt
       Vec c ! Vec
       integer z
       end subroutine
